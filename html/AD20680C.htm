<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>MeshingParameters.Coarse Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Coarse property" /><meta name="System.Keywords" content="MeshingParameters.Coarse property" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.MeshingParameters.Coarse" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.MeshingParameters.get_Coarse" /><meta name="Microsoft.Help.Id" content="P:Rhino.Geometry.MeshingParameters.Coarse" /><meta name="Description" content="Gets meshing parameters for coarse meshing. This corresponds with the &quot;Jagged and Faster&quot; default in Rhino." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="AD20680C" /><meta name="guid" content="AD20680C" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A7FBC69C.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2043CFA.htm" title="Rhino.Geometry" tocid="2043CFA">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8D2ED0D3.htm" title="MeshingParameters Class" tocid="8D2ED0D3">MeshingParameters Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4EADDE58.htm" title="MeshingParameters Properties" tocid="4EADDE58">MeshingParameters Properties</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="AD20680C.htm" title="Coarse Property " tocid="AD20680C">Coarse Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="6F699AD1.htm" title="ComputeCurvature Property " tocid="6F699AD1">ComputeCurvature Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9F6AE096.htm" title="Default Property " tocid="9F6AE096">Default Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="73E6D25.htm" title="GridAmplification Property " tocid="73E6D25">GridAmplification Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="F85E08EC.htm" title="GridAngle Property " tocid="F85E08EC">GridAngle Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8519EE1C.htm" title="GridAspectRatio Property " tocid="8519EE1C">GridAspectRatio Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="A518E8B8.htm" title="GridMaxCount Property " tocid="A518E8B8">GridMaxCount Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="49BD125A.htm" title="GridMinCount Property " tocid="49BD125A">GridMinCount Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3CEAB956.htm" title="JaggedSeams Property " tocid="3CEAB956">JaggedSeams Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="B0696A88.htm" title="MaximumEdgeLength Property " tocid="B0696A88">MaximumEdgeLength Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="AC2D1954.htm" title="Minimal Property " tocid="AC2D1954">Minimal Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="71472D32.htm" title="MinimumEdgeLength Property " tocid="71472D32">MinimumEdgeLength Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E00FD822.htm" title="MinimumTolerance Property " tocid="E00FD822">MinimumTolerance Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="56A0AF07.htm" title="RefineAngle Property " tocid="56A0AF07">RefineAngle Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="BDF59CC4.htm" title="RefineGrid Property " tocid="BDF59CC4">RefineGrid Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="D45944B0.htm" title="RelativeTolerance Property " tocid="D45944B0">RelativeTolerance Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="B1025F8C.htm" title="SimplePlanes Property " tocid="B1025F8C">SimplePlanes Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4827C6DB.htm" title="Smooth Property " tocid="4827C6DB">Smooth Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="CD42582C.htm" title="Tolerance Property " tocid="CD42582C">Tolerance Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">MeshingParameters<span id="LSTAD20680C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTAD20680C_0?cpp=::|nu=.");</script>Coarse Property </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">
            Gets meshing parameters for coarse meshing.
            <p>This corresponds with the "Jagged and Faster" default in Rhino.</p></div><p> </p><strong>Namespace:</strong> <a href="2043CFA.htm">Rhino.Geometry</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">MeshingParameters</span> <span class="identifier">Coarse</span> { <span class="keyword">get</span>; }</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">Coarse</span> <span class="keyword">As</span> <span class="identifier">MeshingParameters</span>
	<span class="keyword">Get</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="8D2ED0D3.htm">MeshingParameters</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','cs','1','2');return false;">C#</a></div><div id="ID0EBBABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.Geometry;
<span class="highlight-keyword">using</span> Rhino.DocObjects;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CreateMeshFromBrepCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csCreateMeshFromBrep"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      ObjRef obj_ref;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetOneObject(<span class="highlight-literal">"Select surface or polysurface to mesh"</span>, <span class="highlight-keyword">true</span>, ObjectType.Surface | ObjectType.PolysrfFilter, <span class="highlight-keyword">out</span> obj_ref);
      <span class="highlight-keyword">if</span> (rc != Result.Success)
        <span class="highlight-keyword">return</span> rc;
      <span class="highlight-keyword">var</span> brep = obj_ref.Brep();
      <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == brep)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-comment">// you could choose anyone of these for example</span>
      <span class="highlight-keyword">var</span> jagged_and_faster = MeshingParameters.Coarse;
      <span class="highlight-keyword">var</span> smooth_and_slower = MeshingParameters.Smooth;
      <span class="highlight-keyword">var</span> default_mesh_params = MeshingParameters.Default;
      <span class="highlight-keyword">var</span> minimal = MeshingParameters.Minimal;

      <span class="highlight-keyword">var</span> meshes = Mesh.CreateFromBrep(brep, smooth_and_slower);
      <span class="highlight-keyword">if</span> (meshes == <span class="highlight-keyword">null</span> || meshes.Length == <span class="highlight-number">0</span>)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-keyword">var</span> brep_mesh = <span class="highlight-keyword">new</span> Mesh();
      <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> mesh <span class="highlight-keyword">in</span> meshes)
        brep_mesh.Append(mesh);
      doc.Objects.AddMesh(brep_mesh);
      doc.Views.Redraw();

      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Geometry
<span class="highlight-keyword">Imports</span> Rhino.DocObjects

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> CreateMeshFromBrepCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbCreateMeshFromBrep"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> objRef <span class="highlight-keyword">As</span> ObjRef = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">Dim</span> rc = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select surface or polysurface to mesh"</span>, <span class="highlight-keyword">True</span>, ObjectType.Surface <span class="highlight-keyword">Or</span> ObjectType.PolysrfFilter, objRef)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> brep = objRef.Brep()
      <span class="highlight-keyword">If</span> brep <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' you could choose any one of these for example</span>
      <span class="highlight-keyword">Dim</span> jaggedAndFaster = MeshingParameters.Coarse
      <span class="highlight-keyword">Dim</span> smoothAndSlower = MeshingParameters.Smooth
      <span class="highlight-keyword">Dim</span> defaultMeshParams = MeshingParameters.<span class="highlight-keyword">Default</span>
      <span class="highlight-keyword">Dim</span> minimal = MeshingParameters.Minimal

      <span class="highlight-keyword">Dim</span> meshes = Mesh.CreateFromBrep(brep, smoothAndSlower)
      <span class="highlight-keyword">If</span> meshes <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">OrElse</span> meshes.Length = <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> brepmesh = <span class="highlight-keyword">New</span> Mesh()
      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> facemesh <span class="highlight-keyword">As</span> Mesh <span class="highlight-keyword">In</span> meshes
        brepmesh.Append(facemesh)
      <span class="highlight-keyword">Next</span>

      doc.Objects.AddMesh(brepmesh)
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">from</span> Rhino.Geometry <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input <span class="highlight-keyword">import</span> RhinoGet
<span class="highlight-keyword">from</span> Rhino.Commands <span class="highlight-keyword">import</span> Result
<span class="highlight-keyword">from</span> Rhino.DocObjects <span class="highlight-keyword">import</span> ObjectType
<span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> RunCommand():
  rc, objRef = RhinoGet.GetOneObject(<span class="highlight-literal">"Select surface or polysurface to mesh"</span>, True, 
                                     ObjectType.Surface | ObjectType.PolysrfFilter)
  <span class="highlight-keyword">if</span> rc &lt;&gt; Result.Success:
    <span class="highlight-keyword">return</span> rc
  brep = objRef.Brep()
  <span class="highlight-keyword">if</span> None == brep:
    <span class="highlight-keyword">return</span> Result.Failure

  jaggedAndFaster = MeshingParameters.Coarse
  smoothAndSlower = MeshingParameters.Smooth
  defaultMeshParams = MeshingParameters.Default
  minimal = MeshingParameters.Minimal

  meshes = Mesh.CreateFromBrep(brep, smoothAndSlower)
  <span class="highlight-keyword">if</span> meshes == None <span class="highlight-keyword">or</span> meshes.Length == <span class="highlight-number">0</span>:
    <span class="highlight-keyword">return</span> Result.Failure

  brepMesh = Mesh()
  <span class="highlight-keyword">for</span> mesh <span class="highlight-keyword">in</span> meshes:
    brepMesh.Append(mesh)
  doc.Objects.AddMesh(brepMesh)
  doc.Views.Redraw()

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="8D2ED0D3.htm">MeshingParameters Class</a></div><div class="seeAlsoStyle"><a href="2043CFA.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>