<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Surface.IsoCurve Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IsoCurve method" /><meta name="System.Keywords" content="Surface.IsoCurve method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Surface.IsoCurve" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Surface.IsoCurve(System.Int32,System.Double)" /><meta name="Description" content="Gets isoparametric curve." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="23EA81EE" /><meta name="guid" content="23EA81EE" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A7FBC69C.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2043CFA.htm" title="Rhino.Geometry" tocid="2043CFA">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5E836617.htm" title="Surface Class" tocid="5E836617">Surface Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7859D491.htm" title="Surface Methods" tocid="7859D491">Surface Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="57427A29.htm" title="ClosestPoint Method " tocid="57427A29">ClosestPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="28957066.htm" title="ClosestSide Method " tocid="28957066">ClosestSide Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E6073511.htm" title="CreateExtrusion Method " tocid="E6073511">CreateExtrusion Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E534B332.htm" title="CreateExtrusionToPoint Method " tocid="E534B332">CreateExtrusionToPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="F3513912.htm" title="CreatePeriodicSurface Method " tocid="F3513912">CreatePeriodicSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="71A78EC5.htm" title="CreateRollingBallFillet Method " tocid="71A78EC5">CreateRollingBallFillet Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="AB2100C6.htm" title="CurvatureAt Method " tocid="AB2100C6">CurvatureAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="AF7F9696.htm" title="Degree Method " tocid="AF7F9696">Degree Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E1FB7266.htm" title="Domain Method " tocid="E1FB7266">Domain Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4C17CF87.htm" title="Evaluate Method " tocid="4C17CF87">Evaluate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="6FD06492.htm" title="Extend Method " tocid="6FD06492">Extend Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="16BE32D3.htm" title="Fit Method " tocid="16BE32D3">Fit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="FD3E4D2.htm" title="FrameAt Method " tocid="FD3E4D2">FrameAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E73B264F.htm" title="GetNextDiscontinuity Method " tocid="E73B264F">GetNextDiscontinuity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8CBEE0DB.htm" title="GetSpanVector Method " tocid="8CBEE0DB">GetSpanVector Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="6F600650.htm" title="GetSurfaceSize Method " tocid="6F600650">GetSurfaceSize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="B99756AA.htm" title="HasNurbsForm Method " tocid="B99756AA">HasNurbsForm Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="511690FA.htm" title="InterpolatedCurveOnSurface Method " tocid="511690FA">InterpolatedCurveOnSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="C8C7587.htm" title="InterpolatedCurveOnSurfaceUV Method " tocid="C8C7587">InterpolatedCurveOnSurfaceUV Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="258B09FD.htm" title="IsAtSeam Method " tocid="258B09FD">IsAtSeam Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="B22C258E.htm" title="IsAtSingularity Method " tocid="B22C258E">IsAtSingularity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9F03108E.htm" title="IsClosed Method " tocid="9F03108E">IsClosed Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1248B13C.htm" title="IsCone Method " tocid="1248B13C">IsCone Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="74FC652B.htm" title="IsContinuous Method " tocid="74FC652B">IsContinuous Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="C03FA031.htm" title="IsCylinder Method " tocid="C03FA031">IsCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="CAE8F75A.htm" title="IsIsoparametric Method " tocid="CAE8F75A">IsIsoparametric Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="23EA81EE.htm" title="IsoCurve Method " tocid="23EA81EE">IsoCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4F3FE46D.htm" title="IsPeriodic Method " tocid="4F3FE46D">IsPeriodic Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3CD64E3.htm" title="IsPlanar Method " tocid="3CD64E3">IsPlanar Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9FFC39E3.htm" title="IsSingular Method " tocid="9FFC39E3">IsSingular Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ED7CFDEA.htm" title="IsSphere Method " tocid="ED7CFDEA">IsSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3837AE64.htm" title="IsTorus Method " tocid="3837AE64">IsTorus Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ED456C00.htm" title="NormalAt Method " tocid="ED456C00">NormalAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="D53D7419.htm" title="Offset Method " tocid="D53D7419">Offset Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="CC567439.htm" title="PointAt Method " tocid="CC567439">PointAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7A853197.htm" title="Pullback Method " tocid="7A853197">Pullback Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9A0C4FD2.htm" title="Pushup Method " tocid="9A0C4FD2">Pushup Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="24037241.htm" title="Rebuild Method " tocid="24037241">Rebuild Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="448FA02D.htm" title="Reverse Method " tocid="448FA02D">Reverse Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="EFE37926.htm" title="SetDomain Method " tocid="EFE37926">SetDomain Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9346909B.htm" title="ShortPath Method " tocid="9346909B">ShortPath Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4C22C08F.htm" title="SpanCount Method " tocid="4C22C08F">SpanCount Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="58349016.htm" title="Split Method " tocid="58349016">Split Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5E867192.htm" title="ToBrep Method " tocid="5E867192">ToBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3FC8D1B7.htm" title="ToNurbsSurface Method " tocid="3FC8D1B7">ToNurbsSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A9F93882.htm" title="Transpose Method " tocid="A9F93882">Transpose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="647F24FE.htm" title="Trim Method " tocid="647F24FE">Trim Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="244E7D77.htm" title="TryGetCone Method " tocid="244E7D77">TryGetCone Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="D23F31EA.htm" title="TryGetCylinder Method " tocid="D23F31EA">TryGetCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="130516C6.htm" title="TryGetPlane Method " tocid="130516C6">TryGetPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="E0BF0D51.htm" title="TryGetSphere Method " tocid="E0BF0D51">TryGetSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="270C889F.htm" title="TryGetTorus Method " tocid="270C889F">TryGetTorus Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Surface<span id="LST710F6E88_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST710F6E88_0?cpp=::|nu=.");</script>IsoCurve Method </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">Gets isoparametric curve.</div><p> </p><strong>Namespace:</strong> <a href="2043CFA.htm">Rhino.Geometry</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Curve</span> <span class="identifier">IsoCurve</span>(
	<span class="identifier">int</span> <span class="parameter">direction</span>,
	<span class="identifier">double</span> <span class="parameter">constantParameter</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">IsoCurve</span> ( 
	<span class="parameter">direction</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">constantParameter</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">Curve</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">direction</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LST710F6E88_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST710F6E88_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />
            0 first parameter varies and second parameter is constant
            e.g., point on IsoCurve(0,c) at t is srf(t,c)
            This is a horizontal line from left to right
            1 first parameter is constant and second parameter varies
            e.g., point on IsoCurve(1,c) at t is srf(c,t
            This is a vertical line from bottom to top.
            </dd><dt><span class="parameter">constantParameter</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST710F6E88_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST710F6E88_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />The parameter that was constant on the original surface.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="4D62EF95.htm">Curve</a><br />An isoparametric curve or null on error.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection">
            In this function "direction" indicates which direction the resulting curve runs.
            0: horizontal, 1: vertical
            In the other Surface functions that take a "direction" argument,
            "direction" indicates if "constantParameter" is a "u" or "v" parameter.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID3RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','cs','1','2');return false;">C#</a></div><div id="ID0EBBABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.DocObjects;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.Input.Custom;
<span class="highlight-keyword">using</span> Rhino.Geometry;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ExtractIsocurveCommand : Rhino.Commands.Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName
    {
      <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csExtractIsocurve"</span>; }
    }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      ObjRef obj_ref;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetOneObject(<span class="highlight-literal">"Select surface"</span>, <span class="highlight-keyword">false</span>, ObjectType.Surface, <span class="highlight-keyword">out</span> obj_ref);
      <span class="highlight-keyword">if</span> (rc != Result.Success || obj_ref == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> rc;
      <span class="highlight-keyword">var</span> surface = obj_ref.Surface();

      <span class="highlight-keyword">var</span> gp = <span class="highlight-keyword">new</span> GetPoint();
      gp.SetCommandPrompt(<span class="highlight-literal">"Point on surface"</span>);
      gp.Constrain(surface, <span class="highlight-keyword">false</span>);
      <span class="highlight-keyword">var</span> option_toggle = <span class="highlight-keyword">new</span> OptionToggle(<span class="highlight-keyword">false</span>, <span class="highlight-literal">"U"</span>, <span class="highlight-literal">"V"</span>);
      gp.AddOptionToggle(<span class="highlight-literal">"Direction"</span>, <span class="highlight-keyword">ref</span> option_toggle);
      Point3d point = Point3d.Unset;
      <span class="highlight-keyword">while</span> (<span class="highlight-keyword">true</span>)
      {
        <span class="highlight-keyword">var</span> grc = gp.Get();
        <span class="highlight-keyword">if</span> (grc == GetResult.Option)
          <span class="highlight-keyword">continue</span>;
        <span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (grc == GetResult.Point)
        {
          point = gp.Point();
          <span class="highlight-keyword">break</span>;
        }
        <span class="highlight-keyword">else</span>
          <span class="highlight-keyword">return</span> Result.Nothing;
      }
      <span class="highlight-keyword">if</span> (point == Point3d.Unset)
        <span class="highlight-keyword">return</span> Result.Nothing;

      <span class="highlight-keyword">int</span> direction = option_toggle.CurrentValue ? <span class="highlight-number">1</span> : <span class="highlight-number">0</span>; <span class="highlight-comment">// V : U</span>
      <span class="highlight-keyword">double</span> u_parameter, v_parameter;
      <span class="highlight-keyword">if</span> (!surface.ClosestPoint(point, <span class="highlight-keyword">out</span> u_parameter, <span class="highlight-keyword">out</span> v_parameter)) <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-keyword">var</span> iso_curve = surface.IsoCurve(direction, direction == <span class="highlight-number">1</span> ? u_parameter : v_parameter);
      <span class="highlight-keyword">if</span> (iso_curve == <span class="highlight-keyword">null</span>) <span class="highlight-keyword">return</span> Result.Failure;

      doc.Objects.AddCurve(iso_curve);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.DocObjects
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Input
<span class="highlight-keyword">Imports</span> Rhino.Input.Custom
<span class="highlight-keyword">Imports</span> Rhino.Geometry

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> ExtractIsocurveCommand
    <span class="highlight-keyword">Inherits</span> Rhino.Commands.Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbExtractIsocurve"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> obj_ref <span class="highlight-keyword">As</span> ObjRef = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">Dim</span> rc = RhinoGet.GetOneObject(<span class="highlight-literal">"Select surface"</span>, <span class="highlight-keyword">False</span>, ObjectType.Surface, obj_ref)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">OrElse</span> obj_ref <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> surface = obj_ref.Surface()

      <span class="highlight-keyword">Dim</span> gp = <span class="highlight-keyword">New</span> GetPoint()
      gp.SetCommandPrompt(<span class="highlight-literal">"Point on surface"</span>)
      gp.Constrain(surface, <span class="highlight-keyword">False</span>)
      <span class="highlight-comment">'gp.GeometryFilter = ObjectType.Point;</span>
      <span class="highlight-keyword">Dim</span> option_toggle = <span class="highlight-keyword">New</span> OptionToggle(<span class="highlight-keyword">False</span>, <span class="highlight-literal">"U"</span>, <span class="highlight-literal">"V"</span>)
      gp.AddOptionToggle(<span class="highlight-literal">"Direction"</span>, option_toggle)
      <span class="highlight-keyword">Dim</span> point <span class="highlight-keyword">As</span> Point3d = Point3d.Unset
      <span class="highlight-keyword">While</span> <span class="highlight-keyword">True</span>
        <span class="highlight-keyword">Dim</span> grc = gp.[<span class="highlight-keyword">Get</span>]()
        <span class="highlight-keyword">If</span> grc = GetResult.[<span class="highlight-keyword">Option</span>] <span class="highlight-keyword">Then</span>
          <span class="highlight-keyword">Continue</span> <span class="highlight-keyword">While</span>
        <span class="highlight-keyword">ElseIf</span> grc = GetResult.Point <span class="highlight-keyword">Then</span>
          point = gp.Point()
          <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">While</span>
        <span class="highlight-keyword">Else</span>
          <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">While</span>
      <span class="highlight-keyword">If</span> point = Point3d.Unset <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> direction <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-keyword">If</span>(option_toggle.CurrentValue, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
      <span class="highlight-comment">' V : U</span>
      <span class="highlight-keyword">Dim</span> u_parameter <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, v_parameter <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> surface.ClosestPoint(point, u_parameter, v_parameter) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> iso_curve = surface.IsoCurve(direction, <span class="highlight-keyword">If</span>(direction = <span class="highlight-number">1</span>, u_parameter, v_parameter))
      <span class="highlight-keyword">If</span> iso_curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      doc.Objects.AddCurve(iso_curve)
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">from</span> Rhino <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.DocObjects <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Commands <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input.Custom <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Geometry <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> RunCommand():
  rc, obj_ref = RhinoGet.GetOneObject(<span class="highlight-literal">"Select surface"</span>, False, ObjectType.Surface)
  <span class="highlight-keyword">if</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">or</span> obj_ref == None:
    <span class="highlight-keyword">return</span> rc
  surface = obj_ref.Surface()

  gp = GetPoint()
  gp.SetCommandPrompt(<span class="highlight-literal">"Point on surface"</span>)
  gp.Constrain(surface, False)
  option_toggle = OptionToggle(False, <span class="highlight-literal">"U"</span>, <span class="highlight-literal">"V"</span>)
  gp.AddOptionToggle(<span class="highlight-literal">"Direction"</span>, option_toggle)
  point = Point3d.Unset

  <span class="highlight-keyword">while</span> True:
    grc = gp.Get()
    <span class="highlight-keyword">if</span> grc == GetResult.Option:
      <span class="highlight-keyword">continue</span>
    <span class="highlight-keyword">elif</span> grc == GetResult.Point:
      point = gp.Point()
      <span class="highlight-keyword">break</span>
    <span class="highlight-keyword">else</span>:
      <span class="highlight-keyword">return</span> Result.Nothing

  <span class="highlight-keyword">if</span> point == Point3d.Unset:
    <span class="highlight-keyword">return</span> Result.Nothing

  direction = <span class="highlight-number">1</span> <span class="highlight-keyword">if</span> option_toggle.CurrentValue <span class="highlight-keyword">else</span> <span class="highlight-number">0</span>
  b, u_parameter, v_parameter = surface.ClosestPoint(point)
  <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> b: <span class="highlight-keyword">return</span> Result.Failure

  iso_curve = surface.IsoCurve(direction, u_parameter <span class="highlight-keyword">if</span> direction == <span class="highlight-number">1</span> <span class="highlight-keyword">else</span> v_parameter)
  <span class="highlight-keyword">if</span> iso_curve == None: 
    <span class="highlight-keyword">return</span> Result.Failure

  doc.Objects.AddCurve(iso_curve)
  doc.Views.Redraw()
  <span class="highlight-keyword">return</span> Result.Success

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="5E836617.htm">Surface Class</a></div><div class="seeAlsoStyle"><a href="2043CFA.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>