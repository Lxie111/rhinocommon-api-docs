<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Curve.GetDistancesBetweenCurves Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="GetDistancesBetweenCurves method" /><meta name="System.Keywords" content="Curve.GetDistancesBetweenCurves method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Curve.GetDistancesBetweenCurves" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Curve.GetDistancesBetweenCurves(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)" /><meta name="Description" content="Computes the distances between two arbitrary curves that overlap." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="3E588A6" /><meta name="guid" content="3E588A6" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A7FBC69C.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2043CFA.htm" title="Rhino.Geometry" tocid="2043CFA">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4D62EF95.htm" title="Curve Class" tocid="4D62EF95">Curve Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="E1ED6617.htm" title="Curve Methods" tocid="E1ED6617">Curve Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="51E65C17.htm" title="ChangeClosedCurveSeam Method " tocid="51E65C17">ChangeClosedCurveSeam Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="2FE54CE2.htm" title="ChangeDimension Method " tocid="2FE54CE2">ChangeDimension Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="F3B5D748.htm" title="ClosedCurveOrientation Method " tocid="F3B5D748">ClosedCurveOrientation Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9625A08C.htm" title="ClosestPoint Method " tocid="9625A08C">ClosestPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="C3DB5BBD.htm" title="ClosestPoints Method " tocid="C3DB5BBD">ClosestPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="85D5F772.htm" title="Contains Method " tocid="85D5F772">Contains Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="988C991D.htm" title="CreateBlendCurve Method " tocid="988C991D">CreateBlendCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5AEC2536.htm" title="CreateBooleanDifference Method " tocid="5AEC2536">CreateBooleanDifference Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="49BE260B.htm" title="CreateBooleanIntersection Method " tocid="49BE260B">CreateBooleanIntersection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E516DDA5.htm" title="CreateBooleanUnion Method " tocid="E516DDA5">CreateBooleanUnion Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="EDD2FF1B.htm" title="CreateControlPointCurve Method " tocid="EDD2FF1B">CreateControlPointCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="445CA7EE.htm" title="CreateFillet Method " tocid="445CA7EE">CreateFillet Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="46545362.htm" title="CreateFilletCurves Method " tocid="46545362">CreateFilletCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="67BFD7D3.htm" title="CreateInterpolatedCurve Method " tocid="67BFD7D3">CreateInterpolatedCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2C2CDBD7.htm" title="CreateMeanCurve Method " tocid="2C2CDBD7">CreateMeanCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9296F417.htm" title="CreateTweenCurves Method " tocid="9296F417">CreateTweenCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="DD5FD13A.htm" title="CreateTweenCurvesWithMatching Method " tocid="DD5FD13A">CreateTweenCurvesWithMatching Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="BEFC0F08.htm" title="CreateTweenCurvesWithSampling Method " tocid="BEFC0F08">CreateTweenCurvesWithSampling Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="F8D80E9E.htm" title="CurvatureAt Method " tocid="F8D80E9E">CurvatureAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="F7E2D955.htm" title="DerivativeAt Method " tocid="F7E2D955">DerivativeAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="89D4A084.htm" title="Dispose Method " tocid="89D4A084">Dispose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5382BABD.htm" title="DivideAsContour Method " tocid="5382BABD">DivideAsContour Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="88E5D892.htm" title="DivideByCount Method " tocid="88E5D892">DivideByCount Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="C3052FA7.htm" title="DivideByLength Method " tocid="C3052FA7">DivideByLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="C13BBB98.htm" title="DivideEquidistant Method " tocid="C13BBB98">DivideEquidistant Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="A8F7B28E.htm" title="DoDirectionsMatch Method " tocid="A8F7B28E">DoDirectionsMatch Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="2304A629.htm" title="Duplicate Method " tocid="2304A629">Duplicate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3C44D2E6.htm" title="DuplicateCurve Method " tocid="3C44D2E6">DuplicateCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8E88471D.htm" title="DuplicateSegments Method " tocid="8E88471D">DuplicateSegments Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="93934245.htm" title="Extend Method " tocid="93934245">Extend Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="F003D1EF.htm" title="ExtendByArc Method " tocid="F003D1EF">ExtendByArc Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="BCC1AB89.htm" title="ExtendByLine Method " tocid="BCC1AB89">ExtendByLine Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="77B853ED.htm" title="ExtendOnSurface Method " tocid="77B853ED">ExtendOnSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="CD6FE2A0.htm" title="Fair Method " tocid="CD6FE2A0">Fair Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="19E8982D.htm" title="Fit Method " tocid="19E8982D">Fit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="76771C0E.htm" title="FrameAt Method " tocid="76771C0E">FrameAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="A0818A47.htm" title="GetCurveParameterFromNurbsFormParameter Method " tocid="A0818A47">GetCurveParameterFromNurbsFormParameter Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="3E588A6.htm" title="GetDistancesBetweenCurves Method " tocid="3E588A6">GetDistancesBetweenCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7F55ABF5.htm" title="GetFilletPoints Method " tocid="7F55ABF5">GetFilletPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="689FB52D.htm" title="GetLength Method " tocid="689FB52D">GetLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5C586369.htm" title="GetNextDiscontinuity Method " tocid="5C586369">GetNextDiscontinuity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8552BCA7.htm" title="GetNurbsFormParameterFromCurveParameter Method " tocid="8552BCA7">GetNurbsFormParameterFromCurveParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="5813E42C.htm" title="GetPerpendicularFrames Method " tocid="5813E42C">GetPerpendicularFrames Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9D4C9D62.htm" title="HasNurbsForm Method " tocid="9D4C9D62">HasNurbsForm Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8D2FAB59.htm" title="IsArc Method " tocid="8D2FAB59">IsArc Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="99AD6EEB.htm" title="IsCircle Method " tocid="99AD6EEB">IsCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="91D88D6.htm" title="IsClosable Method " tocid="91D88D6">IsClosable Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7AF604B1.htm" title="IsContinuous Method " tocid="7AF604B1">IsContinuous Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="9B31A717.htm" title="IsEllipse Method " tocid="9B31A717">IsEllipse Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="EF0C9F26.htm" title="IsInPlane Method " tocid="EF0C9F26">IsInPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="CB5A43B6.htm" title="IsLinear Method " tocid="CB5A43B6">IsLinear Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="D36EE33D.htm" title="IsPlanar Method " tocid="D36EE33D">IsPlanar Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="40BECFE.htm" title="IsPolyline Method " tocid="40BECFE">IsPolyline Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="D034BC97.htm" title="IsShort Method " tocid="D034BC97">IsShort Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A800CDB5.htm" title="JoinCurves Method " tocid="A800CDB5">JoinCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5BE568A6.htm" title="LengthParameter Method " tocid="5BE568A6">LengthParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E81671EC.htm" title="MakeClosed Method " tocid="E81671EC">MakeClosed Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="FB4F2695.htm" title="MakeEndsMeet Method " tocid="FB4F2695">MakeEndsMeet Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="34AEA4BD.htm" title="NonConstOperation Method " tocid="34AEA4BD">NonConstOperation Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="89A097E7.htm" title="NormalizedLengthParameter Method " tocid="89A097E7">NormalizedLengthParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="233C78E6.htm" title="NormalizedLengthParameters Method " tocid="233C78E6">NormalizedLengthParameters Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="E007263C.htm" title="Offset Method " tocid="E007263C">Offset Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8C0EF56E.htm" title="OffsetNormalToSurface Method " tocid="8C0EF56E">OffsetNormalToSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="5914F7B8.htm" title="OffsetOnSurface Method " tocid="5914F7B8">OffsetOnSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="A1B44ACE.htm" title="PerpendicularFrameAt Method " tocid="A1B44ACE">PerpendicularFrameAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="663EBBC7.htm" title="PlanarClosedCurveRelationship Method " tocid="663EBBC7">PlanarClosedCurveRelationship Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="165E7AA3.htm" title="PlanarCurveCollision Method " tocid="165E7AA3">PlanarCurveCollision Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E4CE2B1B.htm" title="PointAt Method " tocid="E4CE2B1B">PointAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="11EF5CDF.htm" title="PointAtLength Method " tocid="11EF5CDF">PointAtLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="488BBA20.htm" title="PointAtNormalizedLength Method " tocid="488BBA20">PointAtNormalizedLength Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="7EE78734.htm" title="ProjectToBrep Method " tocid="7EE78734">ProjectToBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="C3679ACC.htm" title="ProjectToMesh Method " tocid="C3679ACC">ProjectToMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="BFDF37F4.htm" title="ProjectToPlane Method " tocid="BFDF37F4">ProjectToPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="257EE85.htm" title="PullToBrepFace Method " tocid="257EE85">PullToBrepFace Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="16FE7FCB.htm" title="PullToMesh Method " tocid="16FE7FCB">PullToMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="527B9983.htm" title="Rebuild Method " tocid="527B9983">Rebuild Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="38DB374A.htm" title="RemoveShortSegments Method " tocid="38DB374A">RemoveShortSegments Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="BD540FFC.htm" title="Reverse Method " tocid="BD540FFC">Reverse Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="58D6B3CF.htm" title="SetEndPoint Method " tocid="58D6B3CF">SetEndPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="EA950D74.htm" title="SetStartPoint Method " tocid="EA950D74">SetStartPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="454373A3.htm" title="Simplify Method " tocid="454373A3">Simplify Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="C9667E46.htm" title="SimplifyEnd Method " tocid="C9667E46">SimplifyEnd Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="92B5A4A2.htm" title="SpanDomain Method " tocid="92B5A4A2">SpanDomain Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A26B66F1.htm" title="Split Method " tocid="A26B66F1">Split Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="4D7DBFE6.htm" title="TangentAt Method " tocid="4D7DBFE6">TangentAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="D65FCC9F.htm" title="ToNurbsCurve Method " tocid="D65FCC9F">ToNurbsCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="E753875E.htm" title="ToPolyline Method " tocid="E753875E">ToPolyline Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="CD4F40D.htm" title="Trim Method " tocid="CD4F40D">Trim Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="748BF3C0.htm" title="TryGetArc Method " tocid="748BF3C0">TryGetArc Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="4CC5ED90.htm" title="TryGetCircle Method " tocid="4CC5ED90">TryGetCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="D6F19B7E.htm" title="TryGetEllipse Method " tocid="D6F19B7E">TryGetEllipse Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="85708882.htm" title="TryGetPlane Method " tocid="85708882">TryGetPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="FEEDB3D4.htm" title="TryGetPolyline Method " tocid="FEEDB3D4">TryGetPolyline Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Curve<span id="LST7071B979_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_0?cpp=::|nu=.");</script>GetDistancesBetweenCurves Method </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">
            Computes the distances between two arbitrary curves that overlap.
            </div><p> </p><strong>Namespace:</strong> <a href="2043CFA.htm">Rhino.Geometry</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">GetDistancesBetweenCurves</span>(
	<span class="identifier">Curve</span> <span class="parameter">curveA</span>,
	<span class="identifier">Curve</span> <span class="parameter">curveB</span>,
	<span class="identifier">double</span> <span class="parameter">tolerance</span>,
	<span class="keyword">out</span> <span class="identifier">double</span> <span class="parameter">maxDistance</span>,
	<span class="keyword">out</span> <span class="identifier">double</span> <span class="parameter">maxDistanceParameterA</span>,
	<span class="keyword">out</span> <span class="identifier">double</span> <span class="parameter">maxDistanceParameterB</span>,
	<span class="keyword">out</span> <span class="identifier">double</span> <span class="parameter">minDistance</span>,
	<span class="keyword">out</span> <span class="identifier">double</span> <span class="parameter">minDistanceParameterA</span>,
	<span class="keyword">out</span> <span class="identifier">double</span> <span class="parameter">minDistanceParameterB</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">GetDistancesBetweenCurves</span> ( 
	<span class="parameter">curveA</span> <span class="keyword">As</span> <span class="identifier">Curve</span>,
	<span class="parameter">curveB</span> <span class="keyword">As</span> <span class="identifier">Curve</span>,
	<span class="parameter">tolerance</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">maxDistance</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">maxDistanceParameterA</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">maxDistanceParameterB</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">minDistance</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">minDistanceParameterA</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">minDistanceParameterB</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">curveA</span></dt><dd>Type: <a href="4D62EF95.htm">Rhino.Geometry<span id="LST7071B979_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br />A curve.</dd><dt><span class="parameter">curveB</span></dt><dd>Type: <a href="4D62EF95.htm">Rhino.Geometry<span id="LST7071B979_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br />Another curve.</dd><dt><span class="parameter">tolerance</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7071B979_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />A tolerance value.</dd><dt><span class="parameter">maxDistance</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7071B979_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><span id="LST7071B979_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_5?cpp=%");</script><br />The maximum distance value. This is an out reference argument.</dd><dt><span class="parameter">maxDistanceParameterA</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7071B979_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><span id="LST7071B979_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_7?cpp=%");</script><br />The maximum distance parameter on curve A. This is an out reference argument.</dd><dt><span class="parameter">maxDistanceParameterB</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7071B979_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><span id="LST7071B979_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_9?cpp=%");</script><br />The maximum distance parameter on curve B. This is an out reference argument.</dd><dt><span class="parameter">minDistance</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7071B979_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><span id="LST7071B979_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_11?cpp=%");</script><br />The minimum distance value. This is an out reference argument.</dd><dt><span class="parameter">minDistanceParameterA</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7071B979_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_12?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><span id="LST7071B979_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_13?cpp=%");</script><br />The minimum distance parameter on curve A. This is an out reference argument.</dd><dt><span class="parameter">minDistanceParameterB</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7071B979_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_14?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><span id="LST7071B979_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7071B979_15?cpp=%");</script><br />The minimum distance parameter on curve B. This is an out reference argument.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a><br />true if the operation succeeded; otherwise false.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','cs','1','2');return false;">C#</a></div><div id="ID0EBBABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.DocObjects;
<span class="highlight-keyword">using</span> Rhino.Geometry;
<span class="highlight-keyword">using</span> System.Drawing;
<span class="highlight-keyword">using</span> Rhino.Input;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">class</span> DeviationConduit : Rhino.Display.DisplayConduit
  {
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">readonly</span> Curve m_curve_a;
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">readonly</span> Curve m_curve_b;
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">readonly</span> Point3d m_min_dist_point_a ;
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">readonly</span> Point3d m_min_dist_point_b ;
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">readonly</span> Point3d m_max_dist_point_a ;
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">readonly</span> Point3d m_max_dist_point_b ;

    <span class="highlight-keyword">public</span> DeviationConduit(Curve curveA, Curve curveB, Point3d minDistPointA, Point3d minDistPointB, Point3d maxDistPointA, Point3d maxDistPointB)
    {
      m_curve_a = curveA;
      m_curve_b = curveB;
      m_min_dist_point_a = minDistPointA;
      m_min_dist_point_b = minDistPointB;
      m_max_dist_point_a = maxDistPointA;
      m_max_dist_point_b = maxDistPointB;
    }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> DrawForeground(Rhino.Display.DrawEventArgs e)
    {
      e.Display.DrawCurve(m_curve_a, Color.Red);
      e.Display.DrawCurve(m_curve_b, Color.Red);

      e.Display.DrawPoint(m_min_dist_point_a, Color.LawnGreen);
      e.Display.DrawPoint(m_min_dist_point_b, Color.LawnGreen);
      e.Display.DrawLine(<span class="highlight-keyword">new</span> Line(m_min_dist_point_a, m_min_dist_point_b), Color.LawnGreen);
      e.Display.DrawPoint(m_max_dist_point_a, Color.Red);
      e.Display.DrawPoint(m_max_dist_point_b, Color.Red);
      e.Display.DrawLine(<span class="highlight-keyword">new</span> Line(m_max_dist_point_a, m_max_dist_point_b), Color.Red);
    }
  }


  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CurveDeviationCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csCurveDeviation"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      doc.Objects.UnselectAll();

      ObjRef obj_ref1;
      <span class="highlight-keyword">var</span> rc1 = RhinoGet.GetOneObject(<span class="highlight-literal">"first curve"</span>, <span class="highlight-keyword">true</span>, ObjectType.Curve, <span class="highlight-keyword">out</span> obj_ref1);
      <span class="highlight-keyword">if</span> (rc1 != Result.Success)
        <span class="highlight-keyword">return</span> rc1;
      Curve curve_a = <span class="highlight-keyword">null</span>;
      <span class="highlight-keyword">if</span> (obj_ref1 != <span class="highlight-keyword">null</span>)
        curve_a = obj_ref1.Curve();
      <span class="highlight-keyword">if</span> (curve_a == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-comment">// Since you already selected a curve if you don't unselect it</span>
      <span class="highlight-comment">// the next GetOneObject won't stop as it considers that curve </span>
      <span class="highlight-comment">// input, i.e., curveA and curveB will point to the same curve.</span>
      <span class="highlight-comment">// Another option would be to use an instance of Rhino.Input.Custom.GetObject</span>
      <span class="highlight-comment">// instead of Rhino.Input.RhinoGet as GetObject has a DisablePreSelect() method.</span>
      doc.Objects.UnselectAll();

      ObjRef obj_ref2;
      <span class="highlight-keyword">var</span> rc2 = RhinoGet.GetOneObject(<span class="highlight-literal">"second curve"</span>, <span class="highlight-keyword">true</span>, ObjectType.Curve, <span class="highlight-keyword">out</span> obj_ref2);
      <span class="highlight-keyword">if</span> (rc2 != Result.Success)
        <span class="highlight-keyword">return</span> rc2;
      Curve curve_b = <span class="highlight-keyword">null</span>;
      <span class="highlight-keyword">if</span> (obj_ref2 != <span class="highlight-keyword">null</span>)
        curve_b = obj_ref2.Curve();
      <span class="highlight-keyword">if</span> (curve_b == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-keyword">var</span> tolerance = doc.ModelAbsoluteTolerance;

      <span class="highlight-keyword">double</span> max_distance;
      <span class="highlight-keyword">double</span> max_distance_parameter_a;
      <span class="highlight-keyword">double</span> max_distance_parameter_b;
      <span class="highlight-keyword">double</span> min_distance;
      <span class="highlight-keyword">double</span> min_distance_parameter_a;
      <span class="highlight-keyword">double</span> min_distance_parameter_b;

      DeviationConduit conduit;
      <span class="highlight-keyword">if</span> (!Curve.GetDistancesBetweenCurves(curve_a, curve_b, tolerance, <span class="highlight-keyword">out</span> max_distance, 
                <span class="highlight-keyword">out</span> max_distance_parameter_a, <span class="highlight-keyword">out</span> max_distance_parameter_b,
                <span class="highlight-keyword">out</span> min_distance, <span class="highlight-keyword">out</span> min_distance_parameter_a, <span class="highlight-keyword">out</span> min_distance_parameter_b))
      {
        RhinoApp.WriteLine(<span class="highlight-literal">"Unable to find overlap intervals."</span>);
        <span class="highlight-keyword">return</span> Result.Success;
      }
      <span class="highlight-keyword">else</span>
      {
        <span class="highlight-keyword">if</span> (min_distance &lt;= RhinoMath.ZeroTolerance)
          min_distance = <span class="highlight-number">0.0</span>;
        <span class="highlight-keyword">var</span> max_dist_pt_a = curve_a.PointAt(max_distance_parameter_a);
        <span class="highlight-keyword">var</span> max_dist_pt_b = curve_b.PointAt(max_distance_parameter_b);
        <span class="highlight-keyword">var</span> min_dist_pt_a = curve_a.PointAt(min_distance_parameter_a);
        <span class="highlight-keyword">var</span> min_dist_pt_b = curve_b.PointAt(min_distance_parameter_b);

        conduit = <span class="highlight-keyword">new</span> DeviationConduit(curve_a, curve_b, min_dist_pt_a, min_dist_pt_b, max_dist_pt_a, max_dist_pt_b) {Enabled = <span class="highlight-keyword">true</span>};
        doc.Views.Redraw();

        RhinoApp.WriteLine(<span class="highlight-literal">"Minimum deviation = {0}   pointA({1}), pointB({2})"</span>, min_distance, min_dist_pt_a, min_dist_pt_b);
        RhinoApp.WriteLine(<span class="highlight-literal">"Maximum deviation = {0}   pointA({1}), pointB({2})"</span>, max_distance, max_dist_pt_a, max_dist_pt_b);
      }

      <span class="highlight-keyword">var</span> str = <span class="highlight-literal">""</span>;
      RhinoGet.GetString(<span class="highlight-literal">"Press Enter when done"</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">ref</span> str);
      conduit.Enabled = <span class="highlight-keyword">false</span>;

      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.DocObjects
<span class="highlight-keyword">Imports</span> Rhino.Geometry
<span class="highlight-keyword">Imports</span> System.Drawing
<span class="highlight-keyword">Imports</span> Rhino.Input

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Class</span> DeviationConduit
    <span class="highlight-keyword">Inherits</span> Rhino.Display.DisplayConduit
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> _curveA <span class="highlight-keyword">As</span> Curve
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> _curveB <span class="highlight-keyword">As</span> Curve
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> _minDistPointA <span class="highlight-keyword">As</span> Point3d
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> _minDistPointB <span class="highlight-keyword">As</span> Point3d
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> _maxDistPointA <span class="highlight-keyword">As</span> Point3d
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> _maxDistPointB <span class="highlight-keyword">As</span> Point3d

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> <span class="highlight-keyword">New</span>(curveA <span class="highlight-keyword">As</span> Curve, curveB <span class="highlight-keyword">As</span> Curve, minDistPointA <span class="highlight-keyword">As</span> Point3d, minDistPointB <span class="highlight-keyword">As</span> Point3d, maxDistPointA <span class="highlight-keyword">As</span> Point3d, maxDistPointB <span class="highlight-keyword">As</span> Point3d)
      _curveA = curveA
      _curveB = curveB
      _minDistPointA = minDistPointA
      _minDistPointB = minDistPointB
      _maxDistPointA = maxDistPointA
      _maxDistPointB = maxDistPointB
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Sub</span> DrawForeground(e <span class="highlight-keyword">As</span> Rhino.Display.DrawEventArgs)
      e.Display.DrawCurve(_curveA, Color.Red)
      e.Display.DrawCurve(_curveB, Color.Red)

      e.Display.DrawPoint(_minDistPointA, Color.LawnGreen)
      e.Display.DrawPoint(_minDistPointB, Color.LawnGreen)
      e.Display.DrawLine(<span class="highlight-keyword">New</span> Line(_minDistPointA, _minDistPointB), Color.LawnGreen)
      e.Display.DrawPoint(_maxDistPointA, Color.Red)
      e.Display.DrawPoint(_maxDistPointB, Color.Red)
      e.Display.DrawLine(<span class="highlight-keyword">New</span> Line(_maxDistPointA, _maxDistPointB), Color.Red)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>


  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> CurveDeviationCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbCurveDeviation"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      doc.Objects.UnselectAll()

      <span class="highlight-keyword">Dim</span> objRef1 <span class="highlight-keyword">As</span> ObjRef = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">Dim</span> rc1 = RhinoGet.GetOneObject(<span class="highlight-literal">"first curve"</span>, <span class="highlight-keyword">True</span>, ObjectType.Curve, objRef1)
      <span class="highlight-keyword">If</span> rc1 &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc1
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> curveA <span class="highlight-keyword">As</span> Curve = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">If</span> objRef1 <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        curveA = objRef1.Curve()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">If</span> curveA <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Since you already selected a curve if you don't unselect it</span>
      <span class="highlight-comment">' the next GetOneObject won't stop as it considers that curve </span>
      <span class="highlight-comment">' input, i.e., curveA and curveB will point to the same curve.</span>
      <span class="highlight-comment">' Another option would be to use an instance of Rhino.Input.Custom.GetObject</span>
      <span class="highlight-comment">' instead of Rhino.Input.RhinoGet as GetObject has a DisablePreSelect() method.</span>
      doc.Objects.UnselectAll()

      <span class="highlight-keyword">Dim</span> objRef2 <span class="highlight-keyword">As</span> ObjRef = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">Dim</span> rc2 = RhinoGet.GetOneObject(<span class="highlight-literal">"second curve"</span>, <span class="highlight-keyword">True</span>, ObjectType.Curve, objRef2)
      <span class="highlight-keyword">If</span> rc2 &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc2
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> curveB <span class="highlight-keyword">As</span> Curve = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">If</span> objRef2 <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        curveB = objRef2.Curve()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">If</span> curveB <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> tolerance = doc.ModelAbsoluteTolerance

      <span class="highlight-keyword">Dim</span> maxDistance <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">Dim</span> maxDistanceParameterA <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">Dim</span> maxDistanceParameterB <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">Dim</span> minDistance <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">Dim</span> minDistanceParameterA <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">Dim</span> minDistanceParameterB <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>

      <span class="highlight-keyword">Dim</span> conduit <span class="highlight-keyword">As</span> DeviationConduit
      <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> Curve.GetDistancesBetweenCurves(curveA, curveB, tolerance, maxDistance, maxDistanceParameterA, maxDistanceParameterB, _
        minDistance, minDistanceParameterA, minDistanceParameterB) <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine(<span class="highlight-literal">"Unable to find overlap intervals."</span>)
        <span class="highlight-keyword">Return</span> Result.Success
      <span class="highlight-keyword">Else</span>
        <span class="highlight-keyword">If</span> minDistance &lt;= RhinoMath.ZeroTolerance <span class="highlight-keyword">Then</span>
          minDistance = <span class="highlight-number">0.0</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">Dim</span> maxDistPtA = curveA.PointAt(maxDistanceParameterA)
        <span class="highlight-keyword">Dim</span> maxDistPtB = curveB.PointAt(maxDistanceParameterB)
        <span class="highlight-keyword">Dim</span> minDistPtA = curveA.PointAt(minDistanceParameterA)
        <span class="highlight-keyword">Dim</span> minDistPtB = curveB.PointAt(minDistanceParameterB)

        conduit = <span class="highlight-keyword">New</span> DeviationConduit(curveA, curveB, minDistPtA, minDistPtB, maxDistPtA, maxDistPtB)
        conduit.Enabled = <span class="highlight-keyword">True</span>

        doc.Views.Redraw()
        RhinoApp.WriteLine(<span class="highlight-literal">"Minimum deviation= {0}   pointA= {1}, pointB= {2}"</span>, minDistance, minDistPtA, minDistPtB)
        RhinoApp.WriteLine(<span class="highlight-literal">"Maximum deviation= {0}   pointA= {1}, pointB= {2}"</span>, maxDistance, maxDistPtA, maxDistPtB)
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> str <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">""</span>
      RhinoGet.GetString(<span class="highlight-literal">"Press Enter when done"</span>, <span class="highlight-keyword">True</span>, str)
      conduit.Enabled = <span class="highlight-keyword">False</span>

      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> Rhino

<span class="highlight-keyword">def</span> RunCommand():
  crvA = rs.GetCurveObject(<span class="highlight-literal">"first curve"</span>)[<span class="highlight-number">0</span>]
  crvA = rs.coercecurve(crvA)
  crvB = rs.GetCurveObject(<span class="highlight-literal">"second curve"</span>)[<span class="highlight-number">0</span>]
  crvB = rs.coercecurve(crvB)
  <span class="highlight-keyword">if</span> crvA == None <span class="highlight-keyword">or</span> crvB == None:
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

  maxa, maxb, maxd, mina, minb, mind = rs.CurveDeviation(crvA, crvB)

  <span class="highlight-keyword">if</span> mind &lt;= Rhino.RhinoMath.ZeroTolerance:
      mind = <span class="highlight-number">0.0</span>;
  maxDistPtA = crvA.PointAt(maxa)
  maxDistPtB = crvB.PointAt(maxb)
  minDistPtA = crvA.PointAt(mina)
  minDistPtB = crvB.PointAt(minb)

  <span class="highlight-keyword">print</span> <span class="highlight-literal">"Minimum deviation = {0}   pointA({1}, {2}, {3}), pointB({4}, {5}, {6})"</span>.format(
    mind, minDistPtA.X, minDistPtA.Y, minDistPtA.Z, minDistPtB.X, minDistPtB.Y, minDistPtB.Z)
  <span class="highlight-keyword">print</span> <span class="highlight-literal">"Maximum deviation = {0}   pointA({1}, {2}, {3}), pointB({4}, {5}, {6})"</span>.format(
    maxd, maxDistPtA.X, maxDistPtA.Y, maxDistPtA.Z, maxDistPtB.X, maxDistPtB.Y, maxDistPtB.Z)

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="4D62EF95.htm">Curve Class</a></div><div class="seeAlsoStyle"><a href="2043CFA.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>