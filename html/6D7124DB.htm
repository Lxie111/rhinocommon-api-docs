<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>InstanceDefinition.IsDeleted Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IsDeleted property" /><meta name="System.Keywords" content="InstanceDefinition.IsDeleted property" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.InstanceDefinition.IsDeleted" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.InstanceDefinition.get_IsDeleted" /><meta name="Microsoft.Help.Id" content="P:Rhino.DocObjects.InstanceDefinition.IsDeleted" /><meta name="Description" content="summaryP:Rhino.DocObjects.InstanceDefinition.IsDeleted" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.DocObjects" /><meta name="file" content="6D7124DB" /><meta name="guid" content="6D7124DB" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A7FBC69C.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ABAF2FCC.htm" title="Rhino.DocObjects" tocid="ABAF2FCC">Rhino.DocObjects</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="61211FD6.htm" title="InstanceDefinition Class" tocid="61211FD6">InstanceDefinition Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="6AEBD2E5.htm" title="InstanceDefinition Properties" tocid="6AEBD2E5">InstanceDefinition Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9D60EEDA.htm" title="ArchiveFileStatus Property " tocid="9D60EEDA">ArchiveFileStatus Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="A77889B2.htm" title="Description Property " tocid="A77889B2">Description Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="CD54D869.htm" title="Id Property " tocid="CD54D869">Id Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="B320ED00.htm" title="Index Property " tocid="B320ED00">Index Property </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="6D7124DB.htm" title="IsDeleted Property " tocid="6D7124DB">IsDeleted Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="C02918C9.htm" title="IsReference Property " tocid="C02918C9">IsReference Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="BC633629.htm" title="IsTenuous Property " tocid="BC633629">IsTenuous Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="FF7E0ADA.htm" title="LayerStyle Property " tocid="FF7E0ADA">LayerStyle Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="24359853.htm" title="Name Property " tocid="24359853">Name Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="57A38642.htm" title="ObjectCount Property " tocid="57A38642">ObjectCount Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="DACA7167.htm" title="SkipNestedLinkedDefinitions Property " tocid="DACA7167">SkipNestedLinkedDefinitions Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="88395F5B.htm" title="SourceArchive Property " tocid="88395F5B">SourceArchive Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="88AA87BD.htm" title="UpdateType Property " tocid="88AA87BD">UpdateType Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="91DABAA7.htm" title="Url Property " tocid="91DABAA7">Url Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="51EAB8E1.htm" title="UrlDescription Property " tocid="51EAB8E1">UrlDescription Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">InstanceDefinition<span id="LST6D7124DB_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6D7124DB_0?cpp=::|nu=.");</script>IsDeleted Property </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:Rhino.DocObjects.InstanceDefinition.IsDeleted"]</p></div><p> </p><strong>Namespace:</strong> <a href="ABAF2FCC.htm">Rhino.DocObjects</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">IsDeleted</span> { <span class="keyword">get</span>; }</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">IsDeleted</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
	<span class="keyword">Get</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.Commands;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> RenameBlockCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csRenameBlock"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-comment">// Get the name of the insance definition to rename</span>
      <span class="highlight-keyword">var</span> instance_definition_name = <span class="highlight-literal">""</span>;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetString(<span class="highlight-literal">"Name of block to rename"</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">ref</span> instance_definition_name);
      <span class="highlight-keyword">if</span> (rc != Result.Success)
        <span class="highlight-keyword">return</span> rc;
      <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrWhiteSpace(instance_definition_name))
        <span class="highlight-keyword">return</span> Result.Nothing;

      <span class="highlight-comment">// Verify instance definition exists</span>
      <span class="highlight-keyword">var</span> instance_definition = doc.InstanceDefinitions.Find(instance_definition_name, <span class="highlight-keyword">true</span>);
      <span class="highlight-keyword">if</span> (instance_definition == <span class="highlight-keyword">null</span>) {
        RhinoApp.WriteLine(<span class="highlight-literal">"Block \"{0}\" not found."</span>, instance_definition_name);
        <span class="highlight-keyword">return</span> Result.Nothing;
      }

      <span class="highlight-comment">// Verify instance definition is rename-able</span>
      <span class="highlight-keyword">if</span> (instance_definition.IsDeleted || instance_definition.IsReference) {
        RhinoApp.WriteLine(<span class="highlight-literal">"Unable to rename block \"{0}\"."</span>, instance_definition_name);
        <span class="highlight-keyword">return</span> Result.Nothing;
      }

      <span class="highlight-comment">// Get the new instance definition name</span>
      <span class="highlight-keyword">string</span> instance_definition_new_name = <span class="highlight-literal">""</span>;
      rc = RhinoGet.GetString(<span class="highlight-literal">"Name of block to rename"</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">ref</span> instance_definition_new_name);
      <span class="highlight-keyword">if</span> (rc != Result.Success)
        <span class="highlight-keyword">return</span> rc;
      <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrWhiteSpace(instance_definition_new_name))
        <span class="highlight-keyword">return</span> Result.Nothing;

      <span class="highlight-comment">// Verify the new instance definition name is not already in use</span>
      <span class="highlight-keyword">var</span> existing_instance_definition = doc.InstanceDefinitions.Find(instance_definition_new_name, <span class="highlight-keyword">true</span>);
      <span class="highlight-keyword">if</span> (existing_instance_definition != <span class="highlight-keyword">null</span> &amp;&amp; !existing_instance_definition.IsDeleted) {
        RhinoApp.WriteLine(<span class="highlight-literal">"Block \"{0}\" already exists."</span>, existing_instance_definition);
        <span class="highlight-keyword">return</span> Result.Nothing;
      }

      <span class="highlight-comment">// change the block name</span>
      <span class="highlight-keyword">if</span> (!doc.InstanceDefinitions.Modify(instance_definition.Index, instance_definition_new_name, instance_definition.Description, <span class="highlight-keyword">true</span>)) {
        RhinoApp.WriteLine(<span class="highlight-literal">"Could not rename {0} to {1}"</span>, instance_definition.Name, instance_definition_new_name);
        <span class="highlight-keyword">return</span> Result.Failure;
      }

      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> RenameBlockCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbRenameInstanceDefinition"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-comment">' Get the name of the insance definition to rename</span>
      <span class="highlight-keyword">Dim</span> instanceDefinitionName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">""</span>
      <span class="highlight-keyword">Dim</span> rc = Rhino.Input.RhinoGet.GetString(<span class="highlight-literal">"Name of block to rename"</span>, <span class="highlight-keyword">True</span>, instanceDefinitionName)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">If</span> [<span class="highlight-keyword">String</span>].IsNullOrWhiteSpace(instanceDefinitionName) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Verify instance definition exists</span>
      <span class="highlight-keyword">Dim</span> instanceDefinition = doc.InstanceDefinitions.Find(instanceDefinitionName, <span class="highlight-keyword">True</span>)
      <span class="highlight-keyword">If</span> instanceDefinition <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Block "</span><span class="highlight-literal">"{0}"</span><span class="highlight-literal">" not found."</span>, instanceDefinitionName))
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Verify instance definition is rename-able</span>
      <span class="highlight-keyword">If</span> instanceDefinition.IsDeleted <span class="highlight-keyword">OrElse</span> instanceDefinition.IsReference <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Unable to rename block "</span><span class="highlight-literal">"{0}"</span><span class="highlight-literal">"."</span>, instanceDefinitionName))
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Get the new instance definition name</span>
      <span class="highlight-keyword">Dim</span> instanceDefinitionNewName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">""</span>
      rc = Rhino.Input.RhinoGet.GetString(<span class="highlight-literal">"Name of block to rename"</span>, <span class="highlight-keyword">True</span>, instanceDefinitionNewName)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">If</span> [<span class="highlight-keyword">String</span>].IsNullOrWhiteSpace(instanceDefinitionNewName) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Verify the new instance definition name is not already in use</span>
      <span class="highlight-keyword">Dim</span> existingInstanceDefinition = doc.InstanceDefinitions.Find(instanceDefinitionNewName, <span class="highlight-keyword">True</span>)
      <span class="highlight-keyword">If</span> existingInstanceDefinition <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">AndAlso</span> <span class="highlight-keyword">Not</span> existingInstanceDefinition.IsDeleted <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Block "</span><span class="highlight-literal">"{0}"</span><span class="highlight-literal">" already exists."</span>, existingInstanceDefinition))
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' change the block name</span>
      <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> doc.InstanceDefinitions.Modify(instanceDefinition.Index, instanceDefinitionNewName, instanceDefinition.Description, <span class="highlight-keyword">True</span>) <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Could not rename {0} to {1}"</span>, instanceDefinition.Name, instanceDefinitionNewName))
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> Rename():
    blockName = rs.GetString(<span class="highlight-literal">"block to rename"</span>)
    instanceDefinition = doc.InstanceDefinitions.Find(blockName, True)
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> instanceDefinition: 
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"{0} block does not exist"</span>.format(blockName)
        <span class="highlight-keyword">return</span>

    newName = rs.GetString(<span class="highlight-literal">"new name"</span>)
    instanceDefinition = doc.InstanceDefinitions.Find(newName, True)
    <span class="highlight-keyword">if</span> instanceDefinition: 
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"the name '{0}' is already taken by another block"</span>.format(newName)
        <span class="highlight-keyword">return</span>

    rs.RenameBlock(blockName, newName)

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
    Rename()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="61211FD6.htm">InstanceDefinition Class</a></div><div class="seeAlsoStyle"><a href="ABAF2FCC.htm">Rhino.DocObjects Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>