<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Layer.ParentLayerId Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ParentLayerId property" /><meta name="System.Keywords" content="Layer.ParentLayerId property" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.Layer.ParentLayerId" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.Layer.get_ParentLayerId" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.Layer.set_ParentLayerId" /><meta name="Microsoft.Help.Id" content="P:Rhino.DocObjects.Layer.ParentLayerId" /><meta name="Description" content="Gets the ID of the parent layer. Layers can be origanized in a hierarchical structure, in which case this returns the parent layer ID. If the layer has no parent, Guid.Empty will be returned." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.DocObjects" /><meta name="file" content="90F40085" /><meta name="guid" content="90F40085" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A7FBC69C.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ABAF2FCC.htm" title="Rhino.DocObjects" tocid="ABAF2FCC">Rhino.DocObjects</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="CFDD37CD.htm" title="Layer Class" tocid="CFDD37CD">Layer Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="492B0884.htm" title="Layer Properties" tocid="492B0884">Layer Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="1737BB44.htm" title="Color Property " tocid="1737BB44">Color Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="97A7D515.htm" title="FullPath Property " tocid="97A7D515">FullPath Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="22971084.htm" title="Id Property " tocid="22971084">Id Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="666E0815.htm" title="IgesLevel Property " tocid="666E0815">IgesLevel Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="74C5D20E.htm" title="IsDeleted Property " tocid="74C5D20E">IsDeleted Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="91786CCC.htm" title="IsExpanded Property " tocid="91786CCC">IsExpanded Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="57497B8F.htm" title="IsLocked Property " tocid="57497B8F">IsLocked Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="B0982B2A.htm" title="IsReference Property " tocid="B0982B2A">IsReference Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="A56F0F53.htm" title="IsVisible Property " tocid="A56F0F53">IsVisible Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="C585AC3E.htm" title="LayerIndex Property " tocid="C585AC3E">LayerIndex Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="33B95047.htm" title="LinetypeIndex Property " tocid="33B95047">LinetypeIndex Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="FBAF3E22.htm" title="Name Property " tocid="FBAF3E22">Name Property </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="90F40085.htm" title="ParentLayerId Property " tocid="90F40085">ParentLayerId Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="F6B3C791.htm" title="PlotColor Property " tocid="F6B3C791">PlotColor Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="DF93164E.htm" title="PlotWeight Property " tocid="DF93164E">PlotWeight Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="FC825CA4.htm" title="RenderMaterialIndex Property " tocid="FC825CA4">RenderMaterialIndex Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="A02CB7D7.htm" title="SortIndex Property " tocid="A02CB7D7">SortIndex Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="DA1B025E.htm" title="UserStringCount Property " tocid="DA1B025E">UserStringCount Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Layer<span id="LST90F40085_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST90F40085_0?cpp=::|nu=.");</script>ParentLayerId Property </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">
            Gets the ID of the parent layer. Layers can be origanized in a hierarchical structure,
            in which case this returns the parent layer ID. If the layer has no parent,
            Guid.Empty will be returned.
            </div><p> </p><strong>Namespace:</strong> <a href="ABAF2FCC.htm">Rhino.DocObjects</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Guid</span> <span class="identifier">ParentLayerId</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">ParentLayerId</span> <span class="keyword">As</span> <span class="identifier">Guid</span>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/cey1zx63" target="_blank">Guid</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','cs','1','2');return false;">C#</a></div><div id="ID0EBBABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddChildLayer(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Get an existing layer</span>
    <span class="highlight-keyword">string</span> default_name = doc.Layers.CurrentLayer.Name;

    <span class="highlight-comment">// Prompt the user to enter a layer name</span>
    Rhino.Input.Custom.GetString gs = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetString();
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of existing layer"</span>);
    gs.SetDefaultString(default_name);
    gs.AcceptNothing(<span class="highlight-keyword">true</span>);
    gs.Get();
    <span class="highlight-keyword">if</span> (gs.CommandResult() != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> gs.CommandResult();

    <span class="highlight-comment">// Was a layer named entered?</span>
    <span class="highlight-keyword">string</span> layer_name = gs.StringResult().Trim();
    <span class="highlight-keyword">int</span> index = doc.Layers.Find(layer_name, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">if</span> (index&lt;<span class="highlight-number">0</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;

    Rhino.DocObjects.Layer parent_layer = doc.Layers[index];

    <span class="highlight-comment">// Create a child layer</span>
    <span class="highlight-keyword">string</span> child_name = parent_layer.Name + <span class="highlight-literal">"_child"</span>;
    Rhino.DocObjects.Layer childlayer = <span class="highlight-keyword">new</span> Rhino.DocObjects.Layer();
    childlayer.ParentLayerId = parent_layer.Id;
    childlayer.Name = child_name;
    childlayer.Color = System.Drawing.Color.Red;

    index = doc.Layers.Add(childlayer);
    <span class="highlight-keyword">if</span> (index &lt; <span class="highlight-number">0</span>)
    {
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Unable to add {0} layer."</span>, child_name);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddChildLayer(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Get an existing layer</span>
    <span class="highlight-keyword">Dim</span> default_name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = doc.Layers.CurrentLayer.Name

    <span class="highlight-comment">' Prompt the user to enter a layer name</span>
    <span class="highlight-keyword">Dim</span> gs <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetString()
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of existing layer"</span>)
    gs.SetDefaultString(default_name)
    gs.AcceptNothing(<span class="highlight-keyword">True</span>)
    gs.[<span class="highlight-keyword">Get</span>]()
    <span class="highlight-keyword">If</span> gs.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gs.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Was a layer named entered?</span>
    <span class="highlight-keyword">Dim</span> layer_name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = gs.StringResult().Trim()
    <span class="highlight-keyword">Dim</span> index <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = doc.Layers.Find(layer_name, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">If</span> index &lt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> parent_layer <span class="highlight-keyword">As</span> Rhino.DocObjects.Layer = doc.Layers(index)

    <span class="highlight-comment">' Create a child layer</span>
    <span class="highlight-keyword">Dim</span> child_name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = parent_layer.Name + <span class="highlight-literal">"_child"</span>
    <span class="highlight-keyword">Dim</span> childlayer <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.DocObjects.Layer()
    childlayer.ParentLayerId = parent_layer.Id
    childlayer.Name = child_name
    childlayer.Color = System.Drawing.Color.Red

    index = doc.Layers.Add(childlayer)
    <span class="highlight-keyword">If</span> index &lt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Unable to add {0} layer."</span>, child_name)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> System.Drawing.Color

<span class="highlight-keyword">def</span> AddChildLayer():
    <span class="highlight-comment"># Get an existing layer</span>
    default_name = scriptcontext.doc.Layers.CurrentLayer.Name
    <span class="highlight-comment"># Prompt the user to enter a layer name</span>
    gs = Rhino.Input.Custom.GetString()
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of existing layer"</span>)
    gs.SetDefaultString(default_name)
    gs.AcceptNothing(True)
    gs.Get()
    <span class="highlight-keyword">if</span> gs.CommandResult()!=Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span> gs.CommandResult()

    <span class="highlight-comment"># Was a layer named entered?</span>
    layer_name = gs.StringResult().Trim()
    index = scriptcontext.doc.Layers.Find(layer_name, True)
    <span class="highlight-keyword">if</span> index&lt;<span class="highlight-number">0</span>: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    parent_layer = scriptcontext.doc.Layers[index]

    <span class="highlight-comment"># Create a child layer</span>
    child_name = parent_layer.Name + <span class="highlight-literal">"_child"</span>
    childlayer = Rhino.DocObjects.Layer()
    childlayer.ParentLayerId = parent_layer.Id
    childlayer.Name = child_name
    childlayer.Color = System.Drawing.Color.Red

    index = scriptcontext.doc.Layers.Add(childlayer)
    <span class="highlight-keyword">if</span> index&lt;<span class="highlight-number">0</span>:
      <span class="highlight-keyword">print</span> <span class="highlight-literal">"Unable to add"</span>, child_name, <span class="highlight-literal">"layer."</span>
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    AddChildLayer()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="CFDD37CD.htm">Layer Class</a></div><div class="seeAlsoStyle"><a href="ABAF2FCC.htm">Rhino.DocObjects Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>