<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>GetObject.GeometryAttributeFilter Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="GeometryAttributeFilter property" /><meta name="System.Keywords" content="GetObject.GeometryAttributeFilter property" /><meta name="Microsoft.Help.F1" content="Rhino.Input.Custom.GetObject.GeometryAttributeFilter" /><meta name="Microsoft.Help.F1" content="Rhino.Input.Custom.GetObject.get_GeometryAttributeFilter" /><meta name="Microsoft.Help.F1" content="Rhino.Input.Custom.GetObject.set_GeometryAttributeFilter" /><meta name="Microsoft.Help.Id" content="P:Rhino.Input.Custom.GetObject.GeometryAttributeFilter" /><meta name="Description" content="The geometry attribute filter provides a secondary filter that can be used to restrict which objects can be selected. Control of the type of geometry (points, curves, surfaces, meshes, etc.) is provided by GetObject.SetGeometryFilter." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Input.Custom" /><meta name="file" content="50EBB524" /><meta name="guid" content="50EBB524" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="A7FBC69C.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="185500F3.htm" title="Rhino.Input.Custom" tocid="185500F3">Rhino.Input.Custom</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="2163A460.htm" title="GetObject Class" tocid="2163A460">GetObject Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="DCB4E43B.htm" title="GetObject Properties" tocid="DCB4E43B">GetObject Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="A2245118.htm" title="AlreadySelectedObjectSelect Property " tocid="A2245118">AlreadySelectedObjectSelect Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="E124F75B.htm" title="BottomObjectPreference Property " tocid="E124F75B">BottomObjectPreference Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9AF0AC75.htm" title="ChooseOneQuestion Property " tocid="9AF0AC75">ChooseOneQuestion Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="7E47E08B.htm" title="DeselectAllBeforePostSelect Property " tocid="7E47E08B">DeselectAllBeforePostSelect Property </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="50EBB524.htm" title="GeometryAttributeFilter Property " tocid="50EBB524">GeometryAttributeFilter Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="74FFFBF0.htm" title="GeometryFilter Property " tocid="74FFFBF0">GeometryFilter Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="EBFC935.htm" title="GroupSelect Property " tocid="EBFC935">GroupSelect Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="EA0A6F3C.htm" title="InactiveDetailPickEnabled Property " tocid="EA0A6F3C">InactiveDetailPickEnabled Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="8DACAA14.htm" title="ObjectCount Property " tocid="8DACAA14">ObjectCount Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="47974F33.htm" title="ObjectsWerePreselected Property " tocid="47974F33">ObjectsWerePreselected Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="78A9C355.htm" title="OneByOnePostSelect Property " tocid="78A9C355">OneByOnePostSelect Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="D71257A0.htm" title="ReferenceObjectSelect Property " tocid="D71257A0">ReferenceObjectSelect Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="BC97235D.htm" title="SerialNumber Property " tocid="BC97235D">SerialNumber Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="B3B903F7.htm" title="SubObjectSelect Property " tocid="B3B903F7">SubObjectSelect Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">GetObject<span id="LST50EBB524_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST50EBB524_0?cpp=::|nu=.");</script>GeometryAttributeFilter Property </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">
            The geometry attribute filter provides a secondary filter that
            can be used to restrict which objects can be selected. Control
            of the type of geometry (points, curves, surfaces, meshes, etc.)
            is provided by GetObject.SetGeometryFilter. The geometry attribute
            filter is used to require the selected geometry to have certain
            attributes (open, closed, etc.). The default attribute filter
            permits selection of all types of geometry.
            </div><p> </p><strong>Namespace:</strong> <a href="185500F3.htm">Rhino.Input.Custom</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">GeometryAttributeFilter</span> <span class="identifier">GeometryAttributeFilter</span> { <span class="keyword">get</span>; <span class="keyword">set</span>; }</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Property</span> <span class="identifier">GeometryAttributeFilter</span> <span class="keyword">As</span> <span class="identifier">GeometryAttributeFilter</span>
	<span class="keyword">Get</span>
	<span class="keyword">Set</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="8C4BD97D.htm">GeometryAttributeFilter</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','cs','1','2');return false;">C#</a></div><div id="ID0EBBABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result CircleCenter(Rhino.RhinoDoc doc)
  {
    Rhino.Input.Custom.GetObject go = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetObject();
    go.SetCommandPrompt(<span class="highlight-literal">"Select objects"</span>);
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve;
    go.GeometryAttributeFilter = Rhino.Input.Custom.GeometryAttributeFilter.ClosedCurve;
    go.GetMultiple(<span class="highlight-number">1</span>, <span class="highlight-number">0</span>);
    <span class="highlight-keyword">if</span>( go.CommandResult() != Rhino.Commands.Result.Success )
      <span class="highlight-keyword">return</span> go.CommandResult();

    Rhino.DocObjects.ObjRef[] objrefs = go.Objects();
    <span class="highlight-keyword">if</span>( objrefs==<span class="highlight-keyword">null</span> )
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Nothing;

    <span class="highlight-keyword">double</span> tolerance = doc.ModelAbsoluteTolerance;
    <span class="highlight-keyword">for</span>( <span class="highlight-keyword">int</span> i=<span class="highlight-number">0</span>; i&lt;objrefs.Length; i++ )
    {
      <span class="highlight-comment">// get the curve geometry</span>
      Rhino.Geometry.Curve curve = objrefs[i].Curve();
      <span class="highlight-keyword">if</span>( curve==<span class="highlight-keyword">null</span> )
        <span class="highlight-keyword">continue</span>;
      Rhino.Geometry.Circle circle;
      <span class="highlight-keyword">if</span>( curve.TryGetCircle(<span class="highlight-keyword">out</span> circle, tolerance) )
      {
        Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Circle{0}: center = {1}"</span>, i<span class="highlight-number">+1</span>, circle.Center);
      }
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> CircleCenter(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-keyword">Dim</span> go <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetObject()
    go.SetCommandPrompt(<span class="highlight-literal">"Select objects"</span>)
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    go.GeometryAttributeFilter = Rhino.Input.[Custom].GeometryAttributeFilter.ClosedCurve
    go.GetMultiple(<span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">If</span> go.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> go.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> objrefs <span class="highlight-keyword">As</span> Rhino.DocObjects.ObjRef() = go.Objects()
    <span class="highlight-keyword">If</span> objrefs <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.[<span class="highlight-keyword">Nothing</span>]
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> tolerance <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = doc.ModelAbsoluteTolerance
    <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> objrefs.Length - <span class="highlight-number">1</span>
      <span class="highlight-comment">' get the curve geometry</span>
      <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Rhino.Geometry.Curve = objrefs(i).Curve()
      <span class="highlight-keyword">If</span> curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Continue</span> <span class="highlight-keyword">For</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> circle <span class="highlight-keyword">As</span> Rhino.Geometry.Circle
      <span class="highlight-keyword">If</span> curve.TryGetCircle(circle, tolerance) <span class="highlight-keyword">Then</span>
        Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Circle{0}: center = {1}"</span>, i + <span class="highlight-number">1</span>, circle.Center)
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext

<span class="highlight-keyword">def</span> CircleCenter():
    go = Rhino.Input.Custom.GetObject()
    go.SetCommandPrompt(<span class="highlight-literal">"Select objects"</span>)
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    go.GeometryAttributeFilter = Rhino.Input.Custom.GeometryAttributeFilter.ClosedCurve
    go.GetMultiple(<span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">if</span> go.CommandResult()!=Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span> go.CommandResult()

    objrefs = go.Objects()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> objrefs: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Nothing

    tolerance = scriptcontext.doc.ModelAbsoluteTolerance
    <span class="highlight-keyword">for</span> i, objref <span class="highlight-keyword">in</span> enumerate(objrefs):
        <span class="highlight-comment"># get the curve geometry</span>
        curve = objref.Curve()
        <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> curve: <span class="highlight-keyword">continue</span>
        rc, circle = curve.TryGetCircle( tolerance )
        <span class="highlight-keyword">if</span> rc:
            <span class="highlight-keyword">print</span> <span class="highlight-literal">"Circle"</span>, i<span class="highlight-number">+1</span>, <span class="highlight-literal">": center = "</span>, circle.Center
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    CircleCenter()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="2163A460.htm">GetObject Class</a></div><div class="seeAlsoStyle"><a href="185500F3.htm">Rhino.Input.Custom Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>